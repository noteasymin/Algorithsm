#
#제한 조건

#실행시간 : 50개의 테스트 케이스를 합쳐서 C/C++의 경우 1초, JAVA의 경우 1초, Python 2초

#메 모 리 : Heap, Global, Stack 등을 모두 합해 최대 256MB까지 사용 가능 (단, 스택은 최대 1MB까지 사용 가능)

#제출 횟수 제한

#제한 없음

#채점

#Accept : 정상적으로 제출되었다는 의미 (컴파일 에러 등 없다는 의미이며 점수는 공개하지 않음)

#Fail : 컴파일, 런타임 에러 등으로 0점

#평가

#sample_input은 편의를 위해 제공하며, 실제 채점은 별도의 평가용 input으로 이루어진다.






#N명의 사람들이 좌우 일렬로 서 있다




#각 사람들은 특정한 거리의 사람에게 감사하는 마음을 담아 편지 한 통을 보냈다.


#주어진 거리가 양의 정수인 경우 오른쪽, 음의 정수인 경우 왼쪽을 의미한다.

#이 때 서로 감사 편지를 주고 받은 사람들의 쌍의 개수를 계산하라.

#특정한 사람이 보낸 거리의 위치에 사람이 없을 수도 있다는 것에 주의하라.



#예를 들어, N = 3이고 왼쪽 사람부터, 편지를 보낸 거리가 2, 1, -2라고 하자.

#제일 왼쪽 사람과 제일 오른쪽 사람이 서로 편지를 주고받았으며,

#이것이 유일한 쌍임을 알 수 있다.

#따라서 이 경우 답은 1이다.



#[제약사항]



#편지의 개수 N은 1 이상 200 이하이다. (1 ≤ N ≤ 200)

#각 사람이 편지를 보낸 거리의 절댓값은 200 이하이다.



#[입력]

#가장 첫 줄에는 테스트 케이스의 총 수가 주어진다.

#그 다음 줄부터 각 테스트 케이스가 주어지며, 각 테스트 케이스는 2 줄로 구성된다.

#각 테스트 케이스의 첫 줄에는 N이 주어진다.

#다음 줄에 N명의 사람이 편지를 보낸 거리가 제일 왼쪽 사람부터 순서대로 주어진다.



#[출력]

#출력의 각 줄은 ‘#x’로 시작하고, 공백을 한 칸 둔 다음 서로 편지를 주고 받은 쌍의 수를 출력한다. 단, x는 테스트 케이스의 번호이다.

def solution():
    t = int(input())

    for i in range(1, t + 1):
        n = int(input())
        letters = list(map(int, input().split()))
        answer = 0

        for j in range(n):
            if letters[j] > 0:
                for k in range(letters[j] + 1, n):
                    if letters[k] + letters[j] == 0:
                        answer += 1
            else:
                for k in range(letters[j] - 1, -1, -1):
                    if letters[k] + letters[j] == 0:
                        answer += 1

        print(f'#{i} {answer}')


solution()
